name "uwmodem_simulation"

import_types_from "uwmodem_simulationTypes.hpp"
using_library "usbl_evologics"
using_task_library 'usbl_evologics'

# Instantiate one Task per way.
# Connect inputs in transmitter and outputs in receiver.
task_context "Task" do
    needs_configuration

    # Set interface. SERIAL or ETHERNET. Default ETHERNET
    # This will affect the rate of transmission data in raw_data_output
    # For SERIAL it is 2 bytes/Rawpacket. For ETHERNET it is a direct transmission.
    property "receiver_interface", "/usbl_evologics/InterfaceType", :ETHERNET
    # Set probability of good transmission, 0-1
    # It will affect the lost of data
    property "probability", "double", 0.9
    # Instant Message retry. How many retries should be made in case of failure.
    property "im_retry", "int", 1
    # Define bitrate of raw_data_transmission
    property "bitrate", "int", 1600

    ###################################
    ##   Input ports
    ###################################

    # Instant Message to be sent remote device
    input_port "message_input", "/usbl_evologics/SendIM"
    # Raw data to be sent to remote device
    input_port "raw_data_input", "/iodrivers_base/RawPacket"

    # Position in world frame of the local device
    input_port "local_position", "/base/samples/RigidBodyState"

    # Position in world frame of the remote device
    input_port "remote_position", "/base/samples/RigidBodyState"

    ###################################
    ##   Output ports
    ###################################

    # Instant Message receveid from remote device
    output_port "message_output", "/usbl_evologics/ReceiveIM"
    # Raw data receveid from remote device
    output_port "raw_data_output", "/iodrivers_base/RawPacket"

    # Delivering status of "message_input".
    output_port "message_status", "/usbl_evologics/MessageStatus"

    runtime_states   :HUGE_INSTANT_MESSAGE, :FULL_IM_QUEUE

    periodic 0.01
end
